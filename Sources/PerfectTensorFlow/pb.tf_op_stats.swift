// DO NOT EDIT.
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: tensorflow/contrib/tpu/profiler/tf_op_stats.proto
//
// For information on using the generated types, please see the documenation:
//   https://github.com/apple/swift-protobuf/

// This proto describes the format of tensorflow operation level stats for
// profiling (in tensorboard) purpose.

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that your are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

/// Result proto for OpMetrics.
public struct Tensorflow_Tpu_OpMetricsResult: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".OpMetricsResult"

  /// True if this OP is executed on the device; False if it is executed on the
  /// host.
  public var onDevice: Bool {
    get {return _storage._onDevice ?? false}
    set {_uniqueStorage()._onDevice = newValue}
  }
  /// Returns true if `onDevice` has been explicitly set.
  public var hasOnDevice: Bool {return _storage._onDevice != nil}
  /// Clears the value of `onDevice`. Subsequent reads from it will return its default value.
  public mutating func clearOnDevice() {_storage._onDevice = nil}

  /// Name of this OP.
  public var name: String {
    get {return _storage._name ?? String()}
    set {_uniqueStorage()._name = newValue}
  }
  /// Returns true if `name` has been explicitly set.
  public var hasName: Bool {return _storage._name != nil}
  /// Clears the value of `name`. Subsequent reads from it will return its default value.
  public mutating func clearName() {_storage._name = nil}

  /// Rank of this OP.
  public var rank: UInt64 {
    get {return _storage._rank ?? 0}
    set {_uniqueStorage()._rank = newValue}
  }
  /// Returns true if `rank` has been explicitly set.
  public var hasRank: Bool {return _storage._rank != nil}
  /// Clears the value of `rank`. Subsequent reads from it will return its default value.
  public mutating func clearRank() {_storage._rank = nil}

  /// The starting time in cycles of the last instance of this OP executed.
  public var lastStarttimeInCycles: Double {
    get {return _storage._lastStarttimeInCycles ?? 0}
    set {_uniqueStorage()._lastStarttimeInCycles = newValue}
  }
  /// Returns true if `lastStarttimeInCycles` has been explicitly set.
  public var hasLastStarttimeInCycles: Bool {return _storage._lastStarttimeInCycles != nil}
  /// Clears the value of `lastStarttimeInCycles`. Subsequent reads from it will return its default value.
  public mutating func clearLastStarttimeInCycles() {_storage._lastStarttimeInCycles = nil}

  /// The ending time in cycles of the last instance of this OP executed.
  public var lastEndtimeInCycles: Double {
    get {return _storage._lastEndtimeInCycles ?? 0}
    set {_uniqueStorage()._lastEndtimeInCycles = newValue}
  }
  /// Returns true if `lastEndtimeInCycles` has been explicitly set.
  public var hasLastEndtimeInCycles: Bool {return _storage._lastEndtimeInCycles != nil}
  /// Clears the value of `lastEndtimeInCycles`. Subsequent reads from it will return its default value.
  public mutating func clearLastEndtimeInCycles() {_storage._lastEndtimeInCycles = nil}

  /// If this OP (say A), is an immediate child of another OP (say B), this field
  /// stores the sum of duration in microseconds of A inside B. If A appears more
  /// than once in B, the duration of all A's appearances will be added together.
  /// This sum will be reset after the self-time of B is calculated so that it
  /// can be reused for a new parent OP.
  public var sumOfDurationInUsAsChildren: Double {
    get {return _storage._sumOfDurationInUsAsChildren ?? 0}
    set {_uniqueStorage()._sumOfDurationInUsAsChildren = newValue}
  }
  /// Returns true if `sumOfDurationInUsAsChildren` has been explicitly set.
  public var hasSumOfDurationInUsAsChildren: Bool {return _storage._sumOfDurationInUsAsChildren != nil}
  /// Clears the value of `sumOfDurationInUsAsChildren`. Subsequent reads from it will return its default value.
  public mutating func clearSumOfDurationInUsAsChildren() {_storage._sumOfDurationInUsAsChildren = nil}

  /// Number of instances that this OP occurred.
  public var occurrences: UInt64 {
    get {return _storage._occurrences ?? 0}
    set {_uniqueStorage()._occurrences = newValue}
  }
  /// Returns true if `occurrences` has been explicitly set.
  public var hasOccurrences: Bool {return _storage._occurrences != nil}
  /// Clears the value of `occurrences`. Subsequent reads from it will return its default value.
  public mutating func clearOccurrences() {_storage._occurrences = nil}

  /// Total time in microseconds spent in this OP (accumulated
  /// over all of its occurrences).
  public var totalTimeInUs: Double {
    get {return _storage._totalTimeInUs ?? 0}
    set {_uniqueStorage()._totalTimeInUs = newValue}
  }
  /// Returns true if `totalTimeInUs` has been explicitly set.
  public var hasTotalTimeInUs: Bool {return _storage._totalTimeInUs != nil}
  /// Clears the value of `totalTimeInUs`. Subsequent reads from it will return its default value.
  public mutating func clearTotalTimeInUs() {_storage._totalTimeInUs = nil}

  /// Total self time in microseconds spent in this OP
  /// (accumulated over all of its occurrences).
  public var totalSelfTimeInUs: Double {
    get {return _storage._totalSelfTimeInUs ?? 0}
    set {_uniqueStorage()._totalSelfTimeInUs = newValue}
  }
  /// Returns true if `totalSelfTimeInUs` has been explicitly set.
  public var hasTotalSelfTimeInUs: Bool {return _storage._totalSelfTimeInUs != nil}
  /// Clears the value of `totalSelfTimeInUs`. Subsequent reads from it will return its default value.
  public mutating func clearTotalSelfTimeInUs() {_storage._totalSelfTimeInUs = nil}

  /// The total self time as a fraction of sum of all OP's
  /// total self time on the host.
  public var hostTotalSelfTimeAsFractionOfAllOpTime: Double {
    get {return _storage._hostTotalSelfTimeAsFractionOfAllOpTime ?? 0}
    set {_uniqueStorage()._hostTotalSelfTimeAsFractionOfAllOpTime = newValue}
  }
  /// Returns true if `hostTotalSelfTimeAsFractionOfAllOpTime` has been explicitly set.
  public var hasHostTotalSelfTimeAsFractionOfAllOpTime: Bool {return _storage._hostTotalSelfTimeAsFractionOfAllOpTime != nil}
  /// Clears the value of `hostTotalSelfTimeAsFractionOfAllOpTime`. Subsequent reads from it will return its default value.
  public mutating func clearHostTotalSelfTimeAsFractionOfAllOpTime() {_storage._hostTotalSelfTimeAsFractionOfAllOpTime = nil}

  /// Cumulative total self time in fraction on the host.
  public var hostCumulativeTotalSelfTimeAsFractionOfAllOpTime: Double {
    get {return _storage._hostCumulativeTotalSelfTimeAsFractionOfAllOpTime ?? 0}
    set {_uniqueStorage()._hostCumulativeTotalSelfTimeAsFractionOfAllOpTime = newValue}
  }
  /// Returns true if `hostCumulativeTotalSelfTimeAsFractionOfAllOpTime` has been explicitly set.
  public var hasHostCumulativeTotalSelfTimeAsFractionOfAllOpTime: Bool {return _storage._hostCumulativeTotalSelfTimeAsFractionOfAllOpTime != nil}
  /// Clears the value of `hostCumulativeTotalSelfTimeAsFractionOfAllOpTime`. Subsequent reads from it will return its default value.
  public mutating func clearHostCumulativeTotalSelfTimeAsFractionOfAllOpTime() {_storage._hostCumulativeTotalSelfTimeAsFractionOfAllOpTime = nil}

  /// The total self time as a fraction of sum of all OP's
  /// total self time on the device.
  public var deviceTotalSelfTimeAsFractionOfAllOpTime: Double {
    get {return _storage._deviceTotalSelfTimeAsFractionOfAllOpTime ?? 0}
    set {_uniqueStorage()._deviceTotalSelfTimeAsFractionOfAllOpTime = newValue}
  }
  /// Returns true if `deviceTotalSelfTimeAsFractionOfAllOpTime` has been explicitly set.
  public var hasDeviceTotalSelfTimeAsFractionOfAllOpTime: Bool {return _storage._deviceTotalSelfTimeAsFractionOfAllOpTime != nil}
  /// Clears the value of `deviceTotalSelfTimeAsFractionOfAllOpTime`. Subsequent reads from it will return its default value.
  public mutating func clearDeviceTotalSelfTimeAsFractionOfAllOpTime() {_storage._deviceTotalSelfTimeAsFractionOfAllOpTime = nil}

  /// Cumulative total self time in fraction on the device.
  public var deviceCumulativeTotalSelfTimeAsFractionOfAllOpTime: Double {
    get {return _storage._deviceCumulativeTotalSelfTimeAsFractionOfAllOpTime ?? 0}
    set {_uniqueStorage()._deviceCumulativeTotalSelfTimeAsFractionOfAllOpTime = newValue}
  }
  /// Returns true if `deviceCumulativeTotalSelfTimeAsFractionOfAllOpTime` has been explicitly set.
  public var hasDeviceCumulativeTotalSelfTimeAsFractionOfAllOpTime: Bool {return _storage._deviceCumulativeTotalSelfTimeAsFractionOfAllOpTime != nil}
  /// Clears the value of `deviceCumulativeTotalSelfTimeAsFractionOfAllOpTime`. Subsequent reads from it will return its default value.
  public mutating func clearDeviceCumulativeTotalSelfTimeAsFractionOfAllOpTime() {_storage._deviceCumulativeTotalSelfTimeAsFractionOfAllOpTime = nil}

  /// Total number of FLOPs incurred by this OP.
  public var totalFlops: Double {
    get {return _storage._totalFlops ?? 0}
    set {_uniqueStorage()._totalFlops = newValue}
  }
  /// Returns true if `totalFlops` has been explicitly set.
  public var hasTotalFlops: Bool {return _storage._totalFlops != nil}
  /// Clears the value of `totalFlops`. Subsequent reads from it will return its default value.
  public mutating func clearTotalFlops() {_storage._totalFlops = nil}

  /// Total number of bytes accessed by this OP.
  public var totalBytesAccessed: Double {
    get {return _storage._totalBytesAccessed ?? 0}
    set {_uniqueStorage()._totalBytesAccessed = newValue}
  }
  /// Returns true if `totalBytesAccessed` has been explicitly set.
  public var hasTotalBytesAccessed: Bool {return _storage._totalBytesAccessed != nil}
  /// Clears the value of `totalBytesAccessed`. Subsequent reads from it will return its default value.
  public mutating func clearTotalBytesAccessed() {_storage._totalBytesAccessed = nil}

  /// Total time in microseconds that special hw unit 1 is occupied by this OP.
  public var unit1OccupancyInUs: Double {
    get {return _storage._unit1OccupancyInUs ?? 0}
    set {_uniqueStorage()._unit1OccupancyInUs = newValue}
  }
  /// Returns true if `unit1OccupancyInUs` has been explicitly set.
  public var hasUnit1OccupancyInUs: Bool {return _storage._unit1OccupancyInUs != nil}
  /// Clears the value of `unit1OccupancyInUs`. Subsequent reads from it will return its default value.
  public mutating func clearUnit1OccupancyInUs() {_storage._unit1OccupancyInUs = nil}

  /// Total time in microseconds that special hw unit 2 is occupied by this OP.
  public var unit2OccupancyInUs: Double {
    get {return _storage._unit2OccupancyInUs ?? 0}
    set {_uniqueStorage()._unit2OccupancyInUs = newValue}
  }
  /// Returns true if `unit2OccupancyInUs` has been explicitly set.
  public var hasUnit2OccupancyInUs: Bool {return _storage._unit2OccupancyInUs != nil}
  /// Clears the value of `unit2OccupancyInUs`. Subsequent reads from it will return its default value.
  public mutating func clearUnit2OccupancyInUs() {_storage._unit2OccupancyInUs = nil}

  /// Total memory stall time in microseconds.
  public var totalMemoryStallInUs: Double {
    get {return _storage._totalMemoryStallInUs ?? 0}
    set {_uniqueStorage()._totalMemoryStallInUs = newValue}
  }
  /// Returns true if `totalMemoryStallInUs` has been explicitly set.
  public var hasTotalMemoryStallInUs: Bool {return _storage._totalMemoryStallInUs != nil}
  /// Clears the value of `totalMemoryStallInUs`. Subsequent reads from it will return its default value.
  public mutating func clearTotalMemoryStallInUs() {_storage._totalMemoryStallInUs = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularBoolField(value: &_storage._onDevice)
        case 3: try decoder.decodeSingularStringField(value: &_storage._name)
        case 4: try decoder.decodeSingularUInt64Field(value: &_storage._rank)
        case 5: try decoder.decodeSingularDoubleField(value: &_storage._lastStarttimeInCycles)
        case 6: try decoder.decodeSingularDoubleField(value: &_storage._lastEndtimeInCycles)
        case 7: try decoder.decodeSingularDoubleField(value: &_storage._sumOfDurationInUsAsChildren)
        case 8: try decoder.decodeSingularUInt64Field(value: &_storage._occurrences)
        case 9: try decoder.decodeSingularDoubleField(value: &_storage._totalTimeInUs)
        case 10: try decoder.decodeSingularDoubleField(value: &_storage._totalSelfTimeInUs)
        case 11: try decoder.decodeSingularDoubleField(value: &_storage._hostTotalSelfTimeAsFractionOfAllOpTime)
        case 12: try decoder.decodeSingularDoubleField(value: &_storage._hostCumulativeTotalSelfTimeAsFractionOfAllOpTime)
        case 13: try decoder.decodeSingularDoubleField(value: &_storage._deviceTotalSelfTimeAsFractionOfAllOpTime)
        case 14: try decoder.decodeSingularDoubleField(value: &_storage._deviceCumulativeTotalSelfTimeAsFractionOfAllOpTime)
        case 15: try decoder.decodeSingularDoubleField(value: &_storage._totalFlops)
        case 16: try decoder.decodeSingularDoubleField(value: &_storage._totalBytesAccessed)
        case 17: try decoder.decodeSingularDoubleField(value: &_storage._unit1OccupancyInUs)
        case 18: try decoder.decodeSingularDoubleField(value: &_storage._unit2OccupancyInUs)
        case 19: try decoder.decodeSingularDoubleField(value: &_storage._totalMemoryStallInUs)
        default: break
        }
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._onDevice {
        try visitor.visitSingularBoolField(value: v, fieldNumber: 1)
      }
      if let v = _storage._name {
        try visitor.visitSingularStringField(value: v, fieldNumber: 3)
      }
      if let v = _storage._rank {
        try visitor.visitSingularUInt64Field(value: v, fieldNumber: 4)
      }
      if let v = _storage._lastStarttimeInCycles {
        try visitor.visitSingularDoubleField(value: v, fieldNumber: 5)
      }
      if let v = _storage._lastEndtimeInCycles {
        try visitor.visitSingularDoubleField(value: v, fieldNumber: 6)
      }
      if let v = _storage._sumOfDurationInUsAsChildren {
        try visitor.visitSingularDoubleField(value: v, fieldNumber: 7)
      }
      if let v = _storage._occurrences {
        try visitor.visitSingularUInt64Field(value: v, fieldNumber: 8)
      }
      if let v = _storage._totalTimeInUs {
        try visitor.visitSingularDoubleField(value: v, fieldNumber: 9)
      }
      if let v = _storage._totalSelfTimeInUs {
        try visitor.visitSingularDoubleField(value: v, fieldNumber: 10)
      }
      if let v = _storage._hostTotalSelfTimeAsFractionOfAllOpTime {
        try visitor.visitSingularDoubleField(value: v, fieldNumber: 11)
      }
      if let v = _storage._hostCumulativeTotalSelfTimeAsFractionOfAllOpTime {
        try visitor.visitSingularDoubleField(value: v, fieldNumber: 12)
      }
      if let v = _storage._deviceTotalSelfTimeAsFractionOfAllOpTime {
        try visitor.visitSingularDoubleField(value: v, fieldNumber: 13)
      }
      if let v = _storage._deviceCumulativeTotalSelfTimeAsFractionOfAllOpTime {
        try visitor.visitSingularDoubleField(value: v, fieldNumber: 14)
      }
      if let v = _storage._totalFlops {
        try visitor.visitSingularDoubleField(value: v, fieldNumber: 15)
      }
      if let v = _storage._totalBytesAccessed {
        try visitor.visitSingularDoubleField(value: v, fieldNumber: 16)
      }
      if let v = _storage._unit1OccupancyInUs {
        try visitor.visitSingularDoubleField(value: v, fieldNumber: 17)
      }
      if let v = _storage._unit2OccupancyInUs {
        try visitor.visitSingularDoubleField(value: v, fieldNumber: 18)
      }
      if let v = _storage._totalMemoryStallInUs {
        try visitor.visitSingularDoubleField(value: v, fieldNumber: 19)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _storage = _StorageClass.defaultInstance
}

/// Result proto for OpMetricsDb.
public struct Tensorflow_Tpu_OpMetricsDbResult: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".OpMetricsDbResult"

  /// A bunch of OpMetricsResults.
  public var metricsDb: [Tensorflow_Tpu_OpMetricsResult] = []

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeRepeatedMessageField(value: &self.metricsDb)
      default: break
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.metricsDb.isEmpty {
      try visitor.visitRepeatedMessageField(value: self.metricsDb, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }
}

/// Result proto for StepInfo.
public struct Tensorflow_Tpu_StepInfoResult: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".StepInfoResult"

  /// The (micro) step number.
  public var stepNum: UInt32 {
    get {return _stepNum ?? 0}
    set {_stepNum = newValue}
  }
  /// Returns true if `stepNum` has been explicitly set.
  public var hasStepNum: Bool {return self._stepNum != nil}
  /// Clears the value of `stepNum`. Subsequent reads from it will return its default value.
  public mutating func clearStepNum() {self._stepNum = nil}

  /// The step duration in picoseconds.
  public var durationPs: UInt64 {
    get {return _durationPs ?? 0}
    set {_durationPs = newValue}
  }
  /// Returns true if `durationPs` has been explicitly set.
  public var hasDurationPs: Bool {return self._durationPs != nil}
  /// Clears the value of `durationPs`. Subsequent reads from it will return its default value.
  public mutating func clearDurationPs() {self._durationPs = nil}

  /// The infeed duration in picoseconds.
  /// Can turn into a map if we want a variable number of ops.
  public var infeedDurationPs: UInt64 {
    get {return _infeedDurationPs ?? 0}
    set {_infeedDurationPs = newValue}
  }
  /// Returns true if `infeedDurationPs` has been explicitly set.
  public var hasInfeedDurationPs: Bool {return self._infeedDurationPs != nil}
  /// Clears the value of `infeedDurationPs`. Subsequent reads from it will return its default value.
  public mutating func clearInfeedDurationPs() {self._infeedDurationPs = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularUInt32Field(value: &self._stepNum)
      case 2: try decoder.decodeSingularUInt64Field(value: &self._durationPs)
      case 3: try decoder.decodeSingularUInt64Field(value: &self._infeedDurationPs)
      default: break
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._stepNum {
      try visitor.visitSingularUInt32Field(value: v, fieldNumber: 1)
    }
    if let v = self._durationPs {
      try visitor.visitSingularUInt64Field(value: v, fieldNumber: 2)
    }
    if let v = self._infeedDurationPs {
      try visitor.visitSingularUInt64Field(value: v, fieldNumber: 3)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _stepNum: UInt32? = nil
  fileprivate var _durationPs: UInt64? = nil
  fileprivate var _infeedDurationPs: UInt64? = nil
}

/// Result proto for a sequence of steps.
public struct Tensorflow_Tpu_StepSequenceResult: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".StepSequenceResult"

  /// A sequence of StepInfoResults.
  public var stepSequence: [Tensorflow_Tpu_StepInfoResult] = []

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeRepeatedMessageField(value: &self.stepSequence)
      default: break
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.stepSequence.isEmpty {
      try visitor.visitRepeatedMessageField(value: self.stepSequence, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }
}

/// Result proto for a StepDatabase.
public struct Tensorflow_Tpu_StepDatabaseResult: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".StepDatabaseResult"

  /// A map from core_id to StepSequenceResult.
  public var stepSequencePerCore: Dictionary<UInt32,Tensorflow_Tpu_StepSequenceResult> = [:]

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeMapField(fieldType: SwiftProtobuf._ProtobufMessageMap<SwiftProtobuf.ProtobufUInt32,Tensorflow_Tpu_StepSequenceResult>.self, value: &self.stepSequencePerCore)
      default: break
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.stepSequencePerCore.isEmpty {
      try visitor.visitMapField(fieldType: SwiftProtobuf._ProtobufMessageMap<SwiftProtobuf.ProtobufUInt32,Tensorflow_Tpu_StepSequenceResult>.self, value: self.stepSequencePerCore, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }
}

/// Result proto for looping-related metrics.
public struct Tensorflow_Tpu_LoopingResult: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".LoopingResult"

  /// The total iteration time in nanoseconds.
  public var iterationTimeNs: Double {
    get {return _iterationTimeNs ?? 0}
    set {_iterationTimeNs = newValue}
  }
  /// Returns true if `iterationTimeNs` has been explicitly set.
  public var hasIterationTimeNs: Bool {return self._iterationTimeNs != nil}
  /// Clears the value of `iterationTimeNs`. Subsequent reads from it will return its default value.
  public mutating func clearIterationTimeNs() {self._iterationTimeNs = nil}

  /// The total number of iterations.
  public var numIterations: Int32 {
    get {return _numIterations ?? 0}
    set {_numIterations = newValue}
  }
  /// Returns true if `numIterations` has been explicitly set.
  public var hasNumIterations: Bool {return self._numIterations != nil}
  /// Clears the value of `numIterations`. Subsequent reads from it will return its default value.
  public mutating func clearNumIterations() {self._numIterations = nil}

  /// The total computation time in nanoseconds.
  public var computationTimeNs: Double {
    get {return _computationTimeNs ?? 0}
    set {_computationTimeNs = newValue}
  }
  /// Returns true if `computationTimeNs` has been explicitly set.
  public var hasComputationTimeNs: Bool {return self._computationTimeNs != nil}
  /// Clears the value of `computationTimeNs`. Subsequent reads from it will return its default value.
  public mutating func clearComputationTimeNs() {self._computationTimeNs = nil}

  /// The total number of computations.
  public var numComputations: Int32 {
    get {return _numComputations ?? 0}
    set {_numComputations = newValue}
  }
  /// Returns true if `numComputations` has been explicitly set.
  public var hasNumComputations: Bool {return self._numComputations != nil}
  /// Clears the value of `numComputations`. Subsequent reads from it will return its default value.
  public mutating func clearNumComputations() {self._numComputations = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularDoubleField(value: &self._iterationTimeNs)
      case 2: try decoder.decodeSingularInt32Field(value: &self._numIterations)
      case 3: try decoder.decodeSingularDoubleField(value: &self._computationTimeNs)
      case 4: try decoder.decodeSingularInt32Field(value: &self._numComputations)
      default: break
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._iterationTimeNs {
      try visitor.visitSingularDoubleField(value: v, fieldNumber: 1)
    }
    if let v = self._numIterations {
      try visitor.visitSingularInt32Field(value: v, fieldNumber: 2)
    }
    if let v = self._computationTimeNs {
      try visitor.visitSingularDoubleField(value: v, fieldNumber: 3)
    }
    if let v = self._numComputations {
      try visitor.visitSingularInt32Field(value: v, fieldNumber: 4)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _iterationTimeNs: Double? = nil
  fileprivate var _numIterations: Int32? = nil
  fileprivate var _computationTimeNs: Double? = nil
  fileprivate var _numComputations: Int32? = nil
}

/// Result proto for HloExtraInfo.
public struct Tensorflow_Tpu_HloExtraInfoResult: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".HloExtraInfoResult"

  /// Category of the HLO op given by the compiler.
  public var category: String {
    get {return _category ?? String()}
    set {_category = newValue}
  }
  /// Returns true if `category` has been explicitly set.
  public var hasCategory: Bool {return self._category != nil}
  /// Clears the value of `category`. Subsequent reads from it will return its default value.
  public mutating func clearCategory() {self._category = nil}

  /// The long name of the HLO that includes the dimensions.
  public var longName: String {
    get {return _longName ?? String()}
    set {_longName = newValue}
  }
  /// Returns true if `longName` has been explicitly set.
  public var hasLongName: Bool {return self._longName != nil}
  /// Clears the value of `longName`. Subsequent reads from it will return its default value.
  public mutating func clearLongName() {self._longName = nil}

  /// The per-TPU-core batch size inferred from this HLO.
  public var perCoreBatchSize: Int64 {
    get {return _perCoreBatchSize ?? 0}
    set {_perCoreBatchSize = newValue}
  }
  /// Returns true if `perCoreBatchSize` has been explicitly set.
  public var hasPerCoreBatchSize: Bool {return self._perCoreBatchSize != nil}
  /// Clears the value of `perCoreBatchSize`. Subsequent reads from it will return its default value.
  public mutating func clearPerCoreBatchSize() {self._perCoreBatchSize = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularStringField(value: &self._category)
      case 2: try decoder.decodeSingularStringField(value: &self._longName)
      case 3: try decoder.decodeSingularInt64Field(value: &self._perCoreBatchSize)
      default: break
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._category {
      try visitor.visitSingularStringField(value: v, fieldNumber: 1)
    }
    if let v = self._longName {
      try visitor.visitSingularStringField(value: v, fieldNumber: 2)
    }
    if let v = self._perCoreBatchSize {
      try visitor.visitSingularInt64Field(value: v, fieldNumber: 3)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _category: String? = nil
  fileprivate var _longName: String? = nil
  fileprivate var _perCoreBatchSize: Int64? = nil
}

/// Result proto for HloExtraInfoMap.
public struct Tensorflow_Tpu_HloExtraInfoMapResult: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".HloExtraInfoMapResult"

  /// A map from HLO name to HloExtraInfo.
  public var hloExtrainfoMap: Dictionary<String,Tensorflow_Tpu_HloExtraInfoResult> = [:]

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeMapField(fieldType: SwiftProtobuf._ProtobufMessageMap<SwiftProtobuf.ProtobufString,Tensorflow_Tpu_HloExtraInfoResult>.self, value: &self.hloExtrainfoMap)
      default: break
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.hloExtrainfoMap.isEmpty {
      try visitor.visitMapField(fieldType: SwiftProtobuf._ProtobufMessageMap<SwiftProtobuf.ProtobufString,Tensorflow_Tpu_HloExtraInfoResult>.self, value: self.hloExtrainfoMap, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }
}

/// Result proto for host-independent job information.
public struct Tensorflow_Tpu_HostIndependentJobInfoResult: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".HostIndependentJobInfoResult"

  /// The change-list number of this build.
  public var changeList: Int64 {
    get {return _changeList ?? 0}
    set {_changeList = newValue}
  }
  /// Returns true if `changeList` has been explicitly set.
  public var hasChangeList: Bool {return self._changeList != nil}
  /// Clears the value of `changeList`. Subsequent reads from it will return its default value.
  public mutating func clearChangeList() {self._changeList = nil}

  /// The time of this build.
  public var buildTime: Int64 {
    get {return _buildTime ?? 0}
    set {_buildTime = newValue}
  }
  /// Returns true if `buildTime` has been explicitly set.
  public var hasBuildTime: Bool {return self._buildTime != nil}
  /// Clears the value of `buildTime`. Subsequent reads from it will return its default value.
  public mutating func clearBuildTime() {self._buildTime = nil}

  /// The target of this build.
  public var buildTarget: String {
    get {return _buildTarget ?? String()}
    set {_buildTarget = newValue}
  }
  /// Returns true if `buildTarget` has been explicitly set.
  public var hasBuildTarget: Bool {return self._buildTarget != nil}
  /// Clears the value of `buildTarget`. Subsequent reads from it will return its default value.
  public mutating func clearBuildTarget() {self._buildTarget = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularInt64Field(value: &self._changeList)
      case 2: try decoder.decodeSingularInt64Field(value: &self._buildTime)
      case 3: try decoder.decodeSingularStringField(value: &self._buildTarget)
      default: break
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._changeList {
      try visitor.visitSingularInt64Field(value: v, fieldNumber: 1)
    }
    if let v = self._buildTime {
      try visitor.visitSingularInt64Field(value: v, fieldNumber: 2)
    }
    if let v = self._buildTarget {
      try visitor.visitSingularStringField(value: v, fieldNumber: 3)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _changeList: Int64? = nil
  fileprivate var _buildTime: Int64? = nil
  fileprivate var _buildTarget: String? = nil
}

/// Result proto for host-dependent job information.
public struct Tensorflow_Tpu_HostDependentJobInfoResult: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".HostDependentJobInfoResult"

  /// This ID of the host where the job was run on.
  public var hostID: String {
    get {return _hostID ?? String()}
    set {_hostID = newValue}
  }
  /// Returns true if `hostID` has been explicitly set.
  public var hasHostID: Bool {return self._hostID != nil}
  /// Clears the value of `hostID`. Subsequent reads from it will return its default value.
  public mutating func clearHostID() {self._hostID = nil}

  /// The command line used to run the job.
  public var commandLine: String {
    get {return _commandLine ?? String()}
    set {_commandLine = newValue}
  }
  /// Returns true if `commandLine` has been explicitly set.
  public var hasCommandLine: Bool {return self._commandLine != nil}
  /// Clears the value of `commandLine`. Subsequent reads from it will return its default value.
  public mutating func clearCommandLine() {self._commandLine = nil}

  /// The start time of the job on this host.
  public var startTime: Int64 {
    get {return _startTime ?? 0}
    set {_startTime = newValue}
  }
  /// Returns true if `startTime` has been explicitly set.
  public var hasStartTime: Bool {return self._startTime != nil}
  /// Clears the value of `startTime`. Subsequent reads from it will return its default value.
  public mutating func clearStartTime() {self._startTime = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularStringField(value: &self._hostID)
      case 2: try decoder.decodeSingularStringField(value: &self._commandLine)
      case 3: try decoder.decodeSingularInt64Field(value: &self._startTime)
      default: break
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._hostID {
      try visitor.visitSingularStringField(value: v, fieldNumber: 1)
    }
    if let v = self._commandLine {
      try visitor.visitSingularStringField(value: v, fieldNumber: 2)
    }
    if let v = self._startTime {
      try visitor.visitSingularInt64Field(value: v, fieldNumber: 3)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _hostID: String? = nil
  fileprivate var _commandLine: String? = nil
  fileprivate var _startTime: Int64? = nil
}

/// Result proto for RunEnvironment (the run environment of a profiling session).
public struct Tensorflow_Tpu_RunEnvironmentResult: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".RunEnvironmentResult"

  /// Number of hosts used.
  public var hostCount: Int32 {
    get {return _storage._hostCount ?? 0}
    set {_uniqueStorage()._hostCount = newValue}
  }
  /// Returns true if `hostCount` has been explicitly set.
  public var hasHostCount: Bool {return _storage._hostCount != nil}
  /// Clears the value of `hostCount`. Subsequent reads from it will return its default value.
  public mutating func clearHostCount() {_storage._hostCount = nil}

  /// The type of TPU used.
  public var tpuType: String {
    get {return _storage._tpuType ?? String()}
    set {_uniqueStorage()._tpuType = newValue}
  }
  /// Returns true if `tpuType` has been explicitly set.
  public var hasTpuType: Bool {return _storage._tpuType != nil}
  /// Clears the value of `tpuType`. Subsequent reads from it will return its default value.
  public mutating func clearTpuType() {_storage._tpuType = nil}

  /// The number of TPU cores used.
  public var tpuCoreCount: Int32 {
    get {return _storage._tpuCoreCount ?? 0}
    set {_uniqueStorage()._tpuCoreCount = newValue}
  }
  /// Returns true if `tpuCoreCount` has been explicitly set.
  public var hasTpuCoreCount: Bool {return _storage._tpuCoreCount != nil}
  /// Clears the value of `tpuCoreCount`. Subsequent reads from it will return its default value.
  public mutating func clearTpuCoreCount() {_storage._tpuCoreCount = nil}

  /// The per-TPU-core batch size.
  public var perCoreBatchSize: Int32 {
    get {return _storage._perCoreBatchSize ?? 0}
    set {_uniqueStorage()._perCoreBatchSize = newValue}
  }
  /// Returns true if `perCoreBatchSize` has been explicitly set.
  public var hasPerCoreBatchSize: Bool {return _storage._perCoreBatchSize != nil}
  /// Clears the value of `perCoreBatchSize`. Subsequent reads from it will return its default value.
  public mutating func clearPerCoreBatchSize() {_storage._perCoreBatchSize = nil}

  /// Host-independent job information.
  public var hostIndependentJobInfo: Tensorflow_Tpu_HostIndependentJobInfoResult {
    get {return _storage._hostIndependentJobInfo ?? Tensorflow_Tpu_HostIndependentJobInfoResult()}
    set {_uniqueStorage()._hostIndependentJobInfo = newValue}
  }
  /// Returns true if `hostIndependentJobInfo` has been explicitly set.
  public var hasHostIndependentJobInfo: Bool {return _storage._hostIndependentJobInfo != nil}
  /// Clears the value of `hostIndependentJobInfo`. Subsequent reads from it will return its default value.
  public mutating func clearHostIndependentJobInfo() {_storage._hostIndependentJobInfo = nil}

  /// Host-dependent job information.
  public var hostDependentJobInfo: [Tensorflow_Tpu_HostDependentJobInfoResult] {
    get {return _storage._hostDependentJobInfo}
    set {_uniqueStorage()._hostDependentJobInfo = newValue}
  }

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularInt32Field(value: &_storage._hostCount)
        case 2: try decoder.decodeSingularStringField(value: &_storage._tpuType)
        case 3: try decoder.decodeSingularInt32Field(value: &_storage._tpuCoreCount)
        case 4: try decoder.decodeSingularInt32Field(value: &_storage._perCoreBatchSize)
        case 5: try decoder.decodeSingularMessageField(value: &_storage._hostIndependentJobInfo)
        case 6: try decoder.decodeRepeatedMessageField(value: &_storage._hostDependentJobInfo)
        default: break
        }
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._hostCount {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 1)
      }
      if let v = _storage._tpuType {
        try visitor.visitSingularStringField(value: v, fieldNumber: 2)
      }
      if let v = _storage._tpuCoreCount {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 3)
      }
      if let v = _storage._perCoreBatchSize {
        try visitor.visitSingularInt32Field(value: v, fieldNumber: 4)
      }
      if let v = _storage._hostIndependentJobInfo {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 5)
      }
      if !_storage._hostDependentJobInfo.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._hostDependentJobInfo, fieldNumber: 6)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _storage = _StorageClass.defaultInstance
}

/// Result proto for TfStatsHelper.
public struct Tensorflow_Tpu_TfOpStats: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".TfOpStats"

  /// The result for the TF-metric database.
  public var tfMetricsDb: Tensorflow_Tpu_OpMetricsDbResult {
    get {return _storage._tfMetricsDb ?? Tensorflow_Tpu_OpMetricsDbResult()}
    set {_uniqueStorage()._tfMetricsDb = newValue}
  }
  /// Returns true if `tfMetricsDb` has been explicitly set.
  public var hasTfMetricsDb: Bool {return _storage._tfMetricsDb != nil}
  /// Clears the value of `tfMetricsDb`. Subsequent reads from it will return its default value.
  public mutating func clearTfMetricsDb() {_storage._tfMetricsDb = nil}

  /// The result for the HLO-metric database.
  public var hloMetricsDb: Tensorflow_Tpu_OpMetricsDbResult {
    get {return _storage._hloMetricsDb ?? Tensorflow_Tpu_OpMetricsDbResult()}
    set {_uniqueStorage()._hloMetricsDb = newValue}
  }
  /// Returns true if `hloMetricsDb` has been explicitly set.
  public var hasHloMetricsDb: Bool {return _storage._hloMetricsDb != nil}
  /// Clears the value of `hloMetricsDb`. Subsequent reads from it will return its default value.
  public mutating func clearHloMetricsDb() {_storage._hloMetricsDb = nil}

  /// The result for the step database.
  public var stepDb: Tensorflow_Tpu_StepDatabaseResult {
    get {return _storage._stepDb ?? Tensorflow_Tpu_StepDatabaseResult()}
    set {_uniqueStorage()._stepDb = newValue}
  }
  /// Returns true if `stepDb` has been explicitly set.
  public var hasStepDb: Bool {return _storage._stepDb != nil}
  /// Clears the value of `stepDb`. Subsequent reads from it will return its default value.
  public mutating func clearStepDb() {_storage._stepDb = nil}

  /// The result for the looping-related metrics.
  public var looping: Tensorflow_Tpu_LoopingResult {
    get {return _storage._looping ?? Tensorflow_Tpu_LoopingResult()}
    set {_uniqueStorage()._looping = newValue}
  }
  /// Returns true if `looping` has been explicitly set.
  public var hasLooping: Bool {return _storage._looping != nil}
  /// Clears the value of `looping`. Subsequent reads from it will return its default value.
  public mutating func clearLooping() {_storage._looping = nil}

  /// The result for the HloExtraInfoMap.
  public var hloExtrainfoMap: Tensorflow_Tpu_HloExtraInfoMapResult {
    get {return _storage._hloExtrainfoMap ?? Tensorflow_Tpu_HloExtraInfoMapResult()}
    set {_uniqueStorage()._hloExtrainfoMap = newValue}
  }
  /// Returns true if `hloExtrainfoMap` has been explicitly set.
  public var hasHloExtrainfoMap: Bool {return _storage._hloExtrainfoMap != nil}
  /// Clears the value of `hloExtrainfoMap`. Subsequent reads from it will return its default value.
  public mutating func clearHloExtrainfoMap() {_storage._hloExtrainfoMap = nil}

  /// Overall matrix unit utilization in percentage.
  public var matrixUnitUtilizationPercent: Double {
    get {return _storage._matrixUnitUtilizationPercent ?? 0}
    set {_uniqueStorage()._matrixUnitUtilizationPercent = newValue}
  }
  /// Returns true if `matrixUnitUtilizationPercent` has been explicitly set.
  public var hasMatrixUnitUtilizationPercent: Bool {return _storage._matrixUnitUtilizationPercent != nil}
  /// Clears the value of `matrixUnitUtilizationPercent`. Subsequent reads from it will return its default value.
  public mutating func clearMatrixUnitUtilizationPercent() {_storage._matrixUnitUtilizationPercent = nil}

  /// The run environment of this profiling session.
  public var runEnvironment: Tensorflow_Tpu_RunEnvironmentResult {
    get {return _storage._runEnvironment ?? Tensorflow_Tpu_RunEnvironmentResult()}
    set {_uniqueStorage()._runEnvironment = newValue}
  }
  /// Returns true if `runEnvironment` has been explicitly set.
  public var hasRunEnvironment: Bool {return _storage._runEnvironment != nil}
  /// Clears the value of `runEnvironment`. Subsequent reads from it will return its default value.
  public mutating func clearRunEnvironment() {_storage._runEnvironment = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._tfMetricsDb)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._hloMetricsDb)
        case 3: try decoder.decodeSingularMessageField(value: &_storage._stepDb)
        case 4: try decoder.decodeSingularMessageField(value: &_storage._looping)
        case 5: try decoder.decodeSingularMessageField(value: &_storage._hloExtrainfoMap)
        case 6: try decoder.decodeSingularDoubleField(value: &_storage._matrixUnitUtilizationPercent)
        case 7: try decoder.decodeSingularMessageField(value: &_storage._runEnvironment)
        default: break
        }
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._tfMetricsDb {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if let v = _storage._hloMetricsDb {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
      if let v = _storage._stepDb {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
      }
      if let v = _storage._looping {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 4)
      }
      if let v = _storage._hloExtrainfoMap {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 5)
      }
      if let v = _storage._matrixUnitUtilizationPercent {
        try visitor.visitSingularDoubleField(value: v, fieldNumber: 6)
      }
      if let v = _storage._runEnvironment {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 7)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _storage = _StorageClass.defaultInstance
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "tensorflow.tpu"

extension Tensorflow_Tpu_OpMetricsResult: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "on_device"),
    3: .same(proto: "name"),
    4: .same(proto: "rank"),
    5: .standard(proto: "last_starttime_in_cycles"),
    6: .standard(proto: "last_endtime_in_cycles"),
    7: .standard(proto: "sum_of_duration_in_us_as_children"),
    8: .same(proto: "occurrences"),
    9: .standard(proto: "total_time_in_us"),
    10: .standard(proto: "total_self_time_in_us"),
    11: .standard(proto: "host_total_self_time_as_fraction_of_all_op_time"),
    12: .standard(proto: "host_cumulative_total_self_time_as_fraction_of_all_op_time"),
    13: .standard(proto: "device_total_self_time_as_fraction_of_all_op_time"),
    14: .standard(proto: "device_cumulative_total_self_time_as_fraction_of_all_op_time"),
    15: .standard(proto: "total_flops"),
    16: .standard(proto: "total_bytes_accessed"),
    17: .standard(proto: "unit1_occupancy_in_us"),
    18: .standard(proto: "unit2_occupancy_in_us"),
    19: .standard(proto: "total_memory_stall_in_us"),
  ]

  fileprivate class _StorageClass {
    var _onDevice: Bool? = nil
    var _name: String? = nil
    var _rank: UInt64? = nil
    var _lastStarttimeInCycles: Double? = nil
    var _lastEndtimeInCycles: Double? = nil
    var _sumOfDurationInUsAsChildren: Double? = nil
    var _occurrences: UInt64? = nil
    var _totalTimeInUs: Double? = nil
    var _totalSelfTimeInUs: Double? = nil
    var _hostTotalSelfTimeAsFractionOfAllOpTime: Double? = nil
    var _hostCumulativeTotalSelfTimeAsFractionOfAllOpTime: Double? = nil
    var _deviceTotalSelfTimeAsFractionOfAllOpTime: Double? = nil
    var _deviceCumulativeTotalSelfTimeAsFractionOfAllOpTime: Double? = nil
    var _totalFlops: Double? = nil
    var _totalBytesAccessed: Double? = nil
    var _unit1OccupancyInUs: Double? = nil
    var _unit2OccupancyInUs: Double? = nil
    var _totalMemoryStallInUs: Double? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _onDevice = source._onDevice
      _name = source._name
      _rank = source._rank
      _lastStarttimeInCycles = source._lastStarttimeInCycles
      _lastEndtimeInCycles = source._lastEndtimeInCycles
      _sumOfDurationInUsAsChildren = source._sumOfDurationInUsAsChildren
      _occurrences = source._occurrences
      _totalTimeInUs = source._totalTimeInUs
      _totalSelfTimeInUs = source._totalSelfTimeInUs
      _hostTotalSelfTimeAsFractionOfAllOpTime = source._hostTotalSelfTimeAsFractionOfAllOpTime
      _hostCumulativeTotalSelfTimeAsFractionOfAllOpTime = source._hostCumulativeTotalSelfTimeAsFractionOfAllOpTime
      _deviceTotalSelfTimeAsFractionOfAllOpTime = source._deviceTotalSelfTimeAsFractionOfAllOpTime
      _deviceCumulativeTotalSelfTimeAsFractionOfAllOpTime = source._deviceCumulativeTotalSelfTimeAsFractionOfAllOpTime
      _totalFlops = source._totalFlops
      _totalBytesAccessed = source._totalBytesAccessed
      _unit1OccupancyInUs = source._unit1OccupancyInUs
      _unit2OccupancyInUs = source._unit2OccupancyInUs
      _totalMemoryStallInUs = source._totalMemoryStallInUs
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public func _protobuf_generated_isEqualTo(other: Tensorflow_Tpu_OpMetricsResult) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let other_storage = _args.1
        if _storage._onDevice != other_storage._onDevice {return false}
        if _storage._name != other_storage._name {return false}
        if _storage._rank != other_storage._rank {return false}
        if _storage._lastStarttimeInCycles != other_storage._lastStarttimeInCycles {return false}
        if _storage._lastEndtimeInCycles != other_storage._lastEndtimeInCycles {return false}
        if _storage._sumOfDurationInUsAsChildren != other_storage._sumOfDurationInUsAsChildren {return false}
        if _storage._occurrences != other_storage._occurrences {return false}
        if _storage._totalTimeInUs != other_storage._totalTimeInUs {return false}
        if _storage._totalSelfTimeInUs != other_storage._totalSelfTimeInUs {return false}
        if _storage._hostTotalSelfTimeAsFractionOfAllOpTime != other_storage._hostTotalSelfTimeAsFractionOfAllOpTime {return false}
        if _storage._hostCumulativeTotalSelfTimeAsFractionOfAllOpTime != other_storage._hostCumulativeTotalSelfTimeAsFractionOfAllOpTime {return false}
        if _storage._deviceTotalSelfTimeAsFractionOfAllOpTime != other_storage._deviceTotalSelfTimeAsFractionOfAllOpTime {return false}
        if _storage._deviceCumulativeTotalSelfTimeAsFractionOfAllOpTime != other_storage._deviceCumulativeTotalSelfTimeAsFractionOfAllOpTime {return false}
        if _storage._totalFlops != other_storage._totalFlops {return false}
        if _storage._totalBytesAccessed != other_storage._totalBytesAccessed {return false}
        if _storage._unit1OccupancyInUs != other_storage._unit1OccupancyInUs {return false}
        if _storage._unit2OccupancyInUs != other_storage._unit2OccupancyInUs {return false}
        if _storage._totalMemoryStallInUs != other_storage._totalMemoryStallInUs {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Tensorflow_Tpu_OpMetricsDbResult: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "metrics_db"),
  ]

  public func _protobuf_generated_isEqualTo(other: Tensorflow_Tpu_OpMetricsDbResult) -> Bool {
    if self.metricsDb != other.metricsDb {return false}
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Tensorflow_Tpu_StepInfoResult: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "step_num"),
    2: .standard(proto: "duration_ps"),
    3: .standard(proto: "infeed_duration_ps"),
  ]

  public func _protobuf_generated_isEqualTo(other: Tensorflow_Tpu_StepInfoResult) -> Bool {
    if self._stepNum != other._stepNum {return false}
    if self._durationPs != other._durationPs {return false}
    if self._infeedDurationPs != other._infeedDurationPs {return false}
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Tensorflow_Tpu_StepSequenceResult: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "step_sequence"),
  ]

  public func _protobuf_generated_isEqualTo(other: Tensorflow_Tpu_StepSequenceResult) -> Bool {
    if self.stepSequence != other.stepSequence {return false}
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Tensorflow_Tpu_StepDatabaseResult: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "step_sequence_per_core"),
  ]

  public func _protobuf_generated_isEqualTo(other: Tensorflow_Tpu_StepDatabaseResult) -> Bool {
    if self.stepSequencePerCore != other.stepSequencePerCore {return false}
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Tensorflow_Tpu_LoopingResult: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "iteration_time_ns"),
    2: .standard(proto: "num_iterations"),
    3: .standard(proto: "computation_time_ns"),
    4: .standard(proto: "num_computations"),
  ]

  public func _protobuf_generated_isEqualTo(other: Tensorflow_Tpu_LoopingResult) -> Bool {
    if self._iterationTimeNs != other._iterationTimeNs {return false}
    if self._numIterations != other._numIterations {return false}
    if self._computationTimeNs != other._computationTimeNs {return false}
    if self._numComputations != other._numComputations {return false}
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Tensorflow_Tpu_HloExtraInfoResult: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "category"),
    2: .standard(proto: "long_name"),
    3: .standard(proto: "per_core_batch_size"),
  ]

  public func _protobuf_generated_isEqualTo(other: Tensorflow_Tpu_HloExtraInfoResult) -> Bool {
    if self._category != other._category {return false}
    if self._longName != other._longName {return false}
    if self._perCoreBatchSize != other._perCoreBatchSize {return false}
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Tensorflow_Tpu_HloExtraInfoMapResult: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "hlo_extrainfo_map"),
  ]

  public func _protobuf_generated_isEqualTo(other: Tensorflow_Tpu_HloExtraInfoMapResult) -> Bool {
    if self.hloExtrainfoMap != other.hloExtrainfoMap {return false}
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Tensorflow_Tpu_HostIndependentJobInfoResult: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "change_list"),
    2: .standard(proto: "build_time"),
    3: .standard(proto: "build_target"),
  ]

  public func _protobuf_generated_isEqualTo(other: Tensorflow_Tpu_HostIndependentJobInfoResult) -> Bool {
    if self._changeList != other._changeList {return false}
    if self._buildTime != other._buildTime {return false}
    if self._buildTarget != other._buildTarget {return false}
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Tensorflow_Tpu_HostDependentJobInfoResult: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "host_id"),
    2: .standard(proto: "command_line"),
    3: .standard(proto: "start_time"),
  ]

  public func _protobuf_generated_isEqualTo(other: Tensorflow_Tpu_HostDependentJobInfoResult) -> Bool {
    if self._hostID != other._hostID {return false}
    if self._commandLine != other._commandLine {return false}
    if self._startTime != other._startTime {return false}
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Tensorflow_Tpu_RunEnvironmentResult: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "host_count"),
    2: .standard(proto: "tpu_type"),
    3: .standard(proto: "tpu_core_count"),
    4: .standard(proto: "per_core_batch_size"),
    5: .standard(proto: "host_independent_job_info"),
    6: .standard(proto: "host_dependent_job_info"),
  ]

  fileprivate class _StorageClass {
    var _hostCount: Int32? = nil
    var _tpuType: String? = nil
    var _tpuCoreCount: Int32? = nil
    var _perCoreBatchSize: Int32? = nil
    var _hostIndependentJobInfo: Tensorflow_Tpu_HostIndependentJobInfoResult? = nil
    var _hostDependentJobInfo: [Tensorflow_Tpu_HostDependentJobInfoResult] = []

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _hostCount = source._hostCount
      _tpuType = source._tpuType
      _tpuCoreCount = source._tpuCoreCount
      _perCoreBatchSize = source._perCoreBatchSize
      _hostIndependentJobInfo = source._hostIndependentJobInfo
      _hostDependentJobInfo = source._hostDependentJobInfo
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public func _protobuf_generated_isEqualTo(other: Tensorflow_Tpu_RunEnvironmentResult) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let other_storage = _args.1
        if _storage._hostCount != other_storage._hostCount {return false}
        if _storage._tpuType != other_storage._tpuType {return false}
        if _storage._tpuCoreCount != other_storage._tpuCoreCount {return false}
        if _storage._perCoreBatchSize != other_storage._perCoreBatchSize {return false}
        if _storage._hostIndependentJobInfo != other_storage._hostIndependentJobInfo {return false}
        if _storage._hostDependentJobInfo != other_storage._hostDependentJobInfo {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Tensorflow_Tpu_TfOpStats: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "tf_metrics_db"),
    2: .standard(proto: "hlo_metrics_db"),
    3: .standard(proto: "step_db"),
    4: .same(proto: "looping"),
    5: .standard(proto: "hlo_extrainfo_map"),
    6: .standard(proto: "matrix_unit_utilization_percent"),
    7: .standard(proto: "run_environment"),
  ]

  fileprivate class _StorageClass {
    var _tfMetricsDb: Tensorflow_Tpu_OpMetricsDbResult? = nil
    var _hloMetricsDb: Tensorflow_Tpu_OpMetricsDbResult? = nil
    var _stepDb: Tensorflow_Tpu_StepDatabaseResult? = nil
    var _looping: Tensorflow_Tpu_LoopingResult? = nil
    var _hloExtrainfoMap: Tensorflow_Tpu_HloExtraInfoMapResult? = nil
    var _matrixUnitUtilizationPercent: Double? = nil
    var _runEnvironment: Tensorflow_Tpu_RunEnvironmentResult? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _tfMetricsDb = source._tfMetricsDb
      _hloMetricsDb = source._hloMetricsDb
      _stepDb = source._stepDb
      _looping = source._looping
      _hloExtrainfoMap = source._hloExtrainfoMap
      _matrixUnitUtilizationPercent = source._matrixUnitUtilizationPercent
      _runEnvironment = source._runEnvironment
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public func _protobuf_generated_isEqualTo(other: Tensorflow_Tpu_TfOpStats) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let other_storage = _args.1
        if _storage._tfMetricsDb != other_storage._tfMetricsDb {return false}
        if _storage._hloMetricsDb != other_storage._hloMetricsDb {return false}
        if _storage._stepDb != other_storage._stepDb {return false}
        if _storage._looping != other_storage._looping {return false}
        if _storage._hloExtrainfoMap != other_storage._hloExtrainfoMap {return false}
        if _storage._matrixUnitUtilizationPercent != other_storage._matrixUnitUtilizationPercent {return false}
        if _storage._runEnvironment != other_storage._runEnvironment {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}
